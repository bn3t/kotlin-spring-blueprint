openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0
paths:
  /api/books:
    get:
      tags:
        - Book
      summary: Get all books
      operationId: getBooks
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookListResponse'
    post:
      tags:
        - Book
      summary: Add a new book
      operationId: addBook
      requestBody:
        description: Book to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreationRequest'
        required: true
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsResponse'
  /api/books/{bookId}:
    get:
      tags:
        - Book
      summary: Get a book by ID
      operationId: getBookById
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsResponse'
        '404':
          description: Book not found
    put:
      tags:
        - Book
      summary: Update an existing book
      operationId: updateBook
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Book to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdateRequest'
        required: true
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsResponse'
        '404':
          description: Book not found
    delete:
      tags:
        - Book
      summary: Delete a book
      operationId: deleteBook
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Book deleted
        '404':
          description: Book not found
  /api/books/isbn/{isbn}:
    get:
      tags:
        - Book
      summary: Get a book by ISBN
      operationId: getBookByIsbn
      parameters:
        - in: path
          name: isbn
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailsResponse'
        '404':
          description: Book not found
components:
  schemas:
    BookDetailsResponse:
      description: Book Response
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isbn:
          type: string
        price:
          type: number
          format: decimal
        publicationDate:
          type: string
          format: date
    BookListResponse:
      description: Book Response
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isbn:
          type: string
    BookCreationRequest:
      description: Book Response
      type: object
      properties:
        title:
          type: string
        isbn:
          type: string
        price:
          type: number
          format: decimal
        publicationDate:
          type: string
          format: date
    BookUpdateRequest:
      description: Book Response
      type: object
      properties:
        title:
          type: string
        price:
          type: number
          format: decimal
        publicationDate:
          type: string
          format: date
